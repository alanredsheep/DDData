table:
  name: "table"            # table name
  schema: camp
  owner: camp_user
  domain: camp             # business domain
  repository: doris        # hudi/hive/doris

integration:
  source: "script/..."     # sql file
  resource:
    - "script/..."
  type:                    # sh/hive/doris/datax/flink-cdc/
  url:
  command:

orchestrate:
  # In most case, it only uses ${orchestrate.depend} or ${orchestrate.schedule}.
  # When it uses both, the two conditions have to be satisfied both.
  depend:
    auto-depend: true             # use ${lineage.dependencies} when true
    dependencies:                 # In general, set it empty when no dependency or auto-depend
      - table_1                   # this works even auto-depend is true, so
                                  # the final dependencies
                                  #   = ${orchestrate.depend.dependencies}
                                  #     + ${lineage.dependencies} (when auto-depend is true)
  schedule:
    cron: "0 3 0 * * ? *"         # set it empty when no scheduler
  failure:
    retry: 2
    alert: true

quality: # Great Expectation
  sql:
    nonNull:
      - id
      - order_key
    uniqueKey:
      - order_key
    rowConditions:
      - "total >= 0"
      - "count >= 0"
      - "sum(value) > 1000"
  python:

### generated by data-lineage automatically ###
lineage:
  dependencies:
    - table_1
    - table_2
  depended-by:
    - table_3
    - table_4